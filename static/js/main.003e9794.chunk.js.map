{"version":3,"sources":["styles/headerStyles.module.css","styles/addCityStyles.module.css","styles/singleCityStyles.module.css","styles/cityStyles.module.css","styles/forecast.module.css","assets/back.svg","assets/options.svg","styles/cityListStyles.module.css","assets/menu.svg","assets/search.svg","assets/add.svg","styles/globalStyles.module.css","serviceWorker.js","components/CityListHeader.js","openweather/api.js","components/SingleCity.js","components/CityHeader.js","components/ForecastItem.js","index.js","components/CityList.js","components/City.js","components/AddCity.js"],"names":["module","exports","Boolean","window","location","hostname","match","ChatListHeader","className","headerStyles","container","button","src","menuButton","alt","appName","findButton","key","SingleCity","props","id","url","useState","temp","setTemp","wind","setWind","iconUrl","setIconUrl","humidity","setHumidity","city","setCity","country","setCountry","useEffect","a","async","axios","result","data","Math","round","main","speed","icon","weather","name","sys","fetchData","to","singleCityStyles","primary","status","CityHeader","styles","backButton","info","optionsButton","ForecastItem","forecast","descr","label","time","description","history","createBrowserHistory","theme","createMuiTheme","palette","contrastText","render","exact","path","citiesIds","JSON","parse","localStorage","getItem","newCities","i","length","push","cities","CityListHeader","citiesStyles","citiesContainer","create","addButton","useParams","setName","nowTemp","setNowTemp","nowDescription","setNowDescription","items","setItems","getTime","time_txt","date","Date","getDay","list","map","item","idx","dt_txt","cityStyles","now","cityName","setCityName","long","setLong","lat","setLat","cityId","setCityId","saveViaName","e","preventDefault","fetch","then","resp","json","Error","includes","alert","setItem","stringify","catch","console","log","message","saveViaPosition","saveViaId","addCityStyles","form","onSubmit","title","input","TextField","value","onChange","target","variant","Button","color","onClick","size","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.003e9794.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"headerStyles_button__3Ze6U\",\"container\":\"headerStyles_container__cB-Je\",\"appName\":\"headerStyles_appName__24G6P\",\"name\":\"headerStyles_name__24jxf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"addCityStyles_form__vXroS\",\"input\":\"addCityStyles_input__2VJeL\",\"container\":\"addCityStyles_container__AxEd4\",\"title\":\"addCityStyles_title__3e7sd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary\":\"singleCityStyles_primary__2KobS\",\"name\":\"singleCityStyles_name__JYsd7\",\"city\":\"singleCityStyles_city__1cwut\",\"country\":\"singleCityStyles_country__2d3jH\",\"temp\":\"singleCityStyles_temp__5yyPj\",\"status\":\"singleCityStyles_status__2sHDa\",\"container\":\"singleCityStyles_container__2ZsOr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cityStyles_container__1CScO\",\"now\":\"cityStyles_now__10Rsg\",\"forecast\":\"cityStyles_forecast__3oUni\",\"status\":\"cityStyles_status__36RUg\",\"temp\":\"cityStyles_temp__3ADeb\",\"description\":\"cityStyles_description__f8ihs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"forecast_container__14DjJ\",\"info\":\"forecast_info__2cwDy\",\"label\":\"forecast_label__2a8uF\",\"temp\":\"forecast_temp__1WcuC\"};","module.exports = __webpack_public_path__ + \"static/media/back.ca47cc96.svg\";","module.exports = __webpack_public_path__ + \"static/media/options.e76605a3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"cityListStyles_main__2mWae\",\"citiesContainer\":\"cityListStyles_citiesContainer__2TUv5\",\"container\":\"cityListStyles_container__17cNf\",\"create\":\"cityListStyles_create__3EZsy\"};","module.exports = __webpack_public_path__ + \"static/media/menu.c464fe52.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.fa89f918.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.d520891d.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPage\":\"globalStyles_mainPage__3PdaJ\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport headerStyles from '../styles/headerStyles.module.css';\nimport menuButton from '../assets/menu.svg';\nimport findButton from '../assets/search.svg';\n\nfunction ChatListHeader() {\n\treturn (\n\t\t<div className={headerStyles.container}>\n\t\t\t<div className={headerStyles.button}>\n\t\t\t\t<img src={menuButton} alt=\"Menu button\" />\n\t\t\t</div>\n\t\t\t<div className={headerStyles.appName}>Weather App</div>\n\t\t\t<div className={headerStyles.button}>\n\t\t\t\t<img src={findButton} alt=\"Find Button\" />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ChatListHeader;\n","export const key = 'bb8c73b9f1e48300cc10b7d71f51480e';","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport singleCityStyles from '../styles/singleCityStyles.module.css';\nimport { key } from '../openweather/api';\n\nexport default function SingleCity(props) {\n\tconst { id } = props;\n\tconst url = `https://api.openweathermap.org/data/2.5/weather?id=${id}&appid=${key}`;\n\n\tlet [temp, setTemp] = useState(props.temp);\n\tlet [wind, setWind] = useState(props.wind);\n\tlet [iconUrl, setIconUrl] = useState(props.iconUrl);\n\tlet [humidity, setHumidity] = useState(props.humidity);\n\tlet [city, setCity] = useState(props.city);\n\tlet [country, setCountry] = useState(props.country);\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst result = await axios(url);\n\t\t\tconst data = result.data;\n\t\t\tconst temp = Math.round(data.main.temp - 273);\n\t\t\tsetTemp(`${temp} °C`);\n\n\t\t\tconst wind = data.wind.speed;\n\t\t\tsetWind(`Wind: ${wind} m/s`);\n\n\t\t\tconst humidity = data.main.humidity;\n\t\t\tsetHumidity(`Humidity: ${humidity}%`);\n\n\t\t\tconst icon = data.weather[0].icon;\n\t\t\tsetIconUrl(`http://openweathermap.org/img/wn/${icon}@2x.png`);\n\n\t\t\tconst city = data.name;\n\t\t\tsetCity(city);\n\n\t\t\tconst country = data.sys.country;\n\t\t\tsetCountry(country);\n\t\t}\n\n\t\tfetchData();\n\t}, [url]);\n\n\n\treturn (\n\t\t<Link to={`/city/${id}`} className={singleCityStyles.container}>\n\t\t\t<div className={singleCityStyles.primary}>\n\t\t\t\t<div className={singleCityStyles.name}>\n\t\t\t\t\t<div className={singleCityStyles.city}>{city}</div>\n\t\t\t\t\t<div className={singleCityStyles.country}>{country}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={singleCityStyles.temp}>\n\t\t\t\t\t<img src={iconUrl} alt=\"Icon\" />\n\t\t\t\t\t<div>{temp}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={singleCityStyles.status}>\n\t\t\t\t<div>{wind}</div>\n\t\t\t\t<div>{humidity}</div>\n\t\t\t</div>\n\t\t</Link>\n\t);\n}\n\nSingleCity.propTypes = {\n\tid: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from '../styles/headerStyles.module.css';\nimport backButton from '../assets/back.svg';\nimport optionsButton from '../assets/options.svg';\n\nexport default function CityHeader(props) {\n\tconst { name } = props;\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<Link to=\"/\" className={`back-button ${styles.button}`}>\n\t\t\t\t<img src={backButton} alt=\"Back button\" />\n\t\t\t</Link>\n\t\t\t<div className={styles.info}>\n\t\t\t\t<div className={styles.name}>{name}</div>\n\t\t\t</div>\n\t\t\t<div className={`options-button ${styles.button}`}>\n\t\t\t\t<img src={optionsButton} alt=\"Options button\" />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nCityHeader.propTypes = {\n\tname: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport forecast from '../styles/forecast.module.css';\n\nexport default function ForecastItem(props) {\n\treturn (\n\t\t<div className={forecast.container}>\n\t\t\t<div className={forecast.info}>\n\t\t\t\t<img src={props.icon} alt=\"Icon\" />\n\t\t\t\t<div className={forecast.descr}>\n\t\t\t\t\t<div className={forecast.label}>{props.time}</div>\n\t\t\t\t\t<div className={forecast.label}>{props.description}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={forecast.temp}>{props.temp}</div>\n\t\t</div>\n\t);\n}\n\nForecastItem.propTypes = {\n\ticon: PropTypes.string.isRequired,\n\ttime: PropTypes.string.isRequired,\n\tdescription: PropTypes.string.isRequired,\n\ttemp: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport './index.css';\nimport { render } from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport CityList from './components/CityList';\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport City from './components/City';\nimport AddCity from './components/AddCity';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport './styles/globalStyles.module.css';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nexport const history = createBrowserHistory();\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: 'rgb(66, 165, 244)',\n\t\t\tcontrastText: \"white\",\n\t\t},\n\t},\n});\n\nrender(\n\t<MuiThemeProvider theme={theme}>\n\t\t<Router history={history}>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t<CityList />\n\t\t\t\t</Route>\n\t\t\t\t<Route exact path=\"/city/:id\">\n\t\t\t\t\t<City />\n\t\t\t\t</Route>\n\t\t\t\t<Route exact path=\"/add\">\n\t\t\t\t\t<AddCity />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</Router>\n\t</MuiThemeProvider>,\n\tdocument.getElementById('root'),\n);\n\nserviceWorker.unregister();\n","import React, { useState } from 'react';\nimport CityListHeader from './CityListHeader';\nimport citiesStyles from '../styles/cityListStyles.module.css';\nimport SingleCity from './SingleCity';\nimport addButton from '../assets/add.svg';\nimport { Link } from 'react-router-dom';\n\nexport default function CityList() {\n\tconst citiesIds = JSON.parse(localStorage.getItem('cities')) || [];\n\tconst newCities = [];\n\n\tfor (let i = 0; i < citiesIds.length; i += 1) {\n\t\tnewCities.push(<SingleCity key={citiesIds[i]} id={citiesIds[i]} />);\n\t}\n\n\tconst [cities] = useState(newCities);\n\n\treturn (\n\t\t<div className=\"mainPage\">\n\t\t\t<CityListHeader />\n\t\t\t<div className={citiesStyles.container}>\n\t\t\t\t<div className={citiesStyles.citiesContainer}>{cities}</div>\n\t\t\t</div>\n\t\t\t<Link to=\"/add\" className={`add-button ${citiesStyles.create}`}>\n\t\t\t\t<img src={addButton} alt=\"Add city\" />\n\t\t\t</Link>\n\t\t</div>\n\t);\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport CityHeader from './CityHeader';\nimport cityStyles from '../styles/cityStyles.module.css';\nimport ForecastItem from './ForecastItem';\nimport { key } from '../openweather/api';\n\nexport default function City(props) {\n\tlet { id } = useParams();\n\tlet [name, setName] = useState('');\n\tlet [nowTemp, setNowTemp] = useState('');\n\tlet [nowDescription, setNowDescription] = useState('');\n\tlet [items, setItems] = useState([]);\n\n\tconst url = `https://api.openweathermap.org/data/2.5/forecast?id=${id}&appid=${key}`;\n\n\t// fetch(url)\n\t// \t.then(function (resp) {\n\t// \t\treturn resp.json();\n\t// \t})\n\t// \t.then(function (data) {\n\t// \t\tif (data.cod !== '200') {\n\t// \t\t\tthrow new Error(\"Invalid data\");\n\t// \t\t}\n\n\t// \t\tsetName(data.city.name);\n\t// \t\tsetNowTemp(`${Math.round(data.list[0].main.temp - 273)} °C`);\n\t// \t\tsetNowDescription(data.list[0].weather[0].main);\n\t// \t\tsetItems(data.list.map((item, idx) => <ForecastItem\n\t// \t\t\tkey={idx}\n\t// \t\t\ticon={`http://openweathermap.org/img/wn/${item.weather.icon}@2x.png`}\n\t// \t\t\ttime={item.dt_txt}\n\t// \t\t\tdescription={item.weather.description}\n\t// \t\t\ttemp={`${Math.round(item.main.temp - 273)} °C`} />));\n\t// \t})\n\t// \t.catch((e) => {\n\t// \t\tconsole.log(e);\n\t// \t\talert(e.message);\n\t// \t});\n\n\tfunction getTime(time_txt) {\n\t\tconst date = new Date(Date.parse(time_txt));\n\t\tconst weekdays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\t\treturn `${weekdays[date.getDay()]}`;\n\t}\n\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst result = await axios(url);\n\t\t\tconst data = result.data;\n\t\t\tsetName(data.city.name);\n\t\t\tsetNowTemp(`${Math.round(data.list[0].main.temp - 273)} °C`);\n\t\t\tsetNowDescription(data.list[0].weather[0].main);\n\t\t\tconst items = [];\n\t\t\tfor (let i = 0; i < data.list.length; i += 8) {\n\t\t\t\titems.push(data.list[i]);\n\t\t\t}\n\t\t\tsetItems(items.map((item, idx) => <ForecastItem\n\t\t\t\tkey={idx}\n\t\t\t\ticon={`http://openweathermap.org/img/wn/${item.weather[0].icon}@2x.png`}\n\t\t\t\ttime={getTime(item.dt_txt)}\n\t\t\t\tdescription={item.weather[0].description}\n\t\t\t\ttemp={`${Math.round(item.main.temp - 273)} °C`} />));\n\t\t}\n\n\t\tfetchData();\n\t}, [url]);\n\n\treturn (\n\t\t<div className=\"mainPage\">\n\t\t\t<CityHeader name={name} />\n\t\t\t<div className={cityStyles.container}>\n\t\t\t\t<div className={cityStyles.now}>\n\t\t\t\t\t<div className={cityStyles.status}>\n\t\t\t\t\t\t<div className={cityStyles.temp}>{nowTemp}</div>\n\t\t\t\t\t\t<div className={cityStyles.description}>{nowDescription}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={cityStyles.forecast}>{items}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport headerStyles from '../styles/headerStyles.module.css';\nimport backButton from '../assets/back.svg';\nimport { TextField, Button } from '@material-ui/core';\nimport addCityStyles from '../styles/addCityStyles.module.css';\nimport optionsButton from '../assets/options.svg';\nimport {key} from '../openweather/api';\n\nexport default function AddCity() {\n\tconst [cityName, setCityName] = useState('');\n\tconst [long, setLong] = useState('');\n\tconst [lat, setLat] = useState('');\n\tconst [cityId, setCityId] = useState('');\n\tconst cities = JSON.parse(localStorage.getItem('cities')) || [];\n\n\tfunction saveViaName(e) {\n\t\te.preventDefault();\n\t\tif (cityName === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst url = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${key}`;\n\t\tfetch(url)\n\t\t\t.then(function (resp) {\n\t\t\t\treturn resp.json();\n\t\t\t})\n\t\t\t.then(function (data) {\n\t\t\t\tif (data.id == null) {\n\t\t\t\t\tthrow new Error(\"invalid data\");\n\t\t\t\t}\n\t\t\t\tif (cities.includes(data.id)) {\n\t\t\t\t\talert('You have already added this city');\n\t\t\t\t\tthrow new Error(\"already added\");\n\t\t\t\t}\n\t\t\t\tcities.push(data.id);\n\t\t\t\tlocalStorage.setItem('cities', JSON.stringify(cities));\n\t\t\t\talert('Succes!');\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t\talert(e.message);\n\t\t\t});\n\t}\n\n\tfunction saveViaPosition(e) {\n\t\te.preventDefault();\n\t\tif (long === '' || lat === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${key}`;\n\t\tfetch(url)\n\t\t\t.then(function (resp) {\n\t\t\t\treturn resp.json();\n\t\t\t})\n\t\t\t.then(function (data) {\n\t\t\t\tif (data.id == null) {\n\t\t\t\t\tthrow new Error(\"invalid data\");\n\t\t\t\t}\n\t\t\t\tif (cities.includes(data.id)) {\n\t\t\t\t\talert('You have already added this city');\n\t\t\t\t\tthrow new Error(\"already added\");\n\t\t\t\t}\n\t\t\t\tcities.push(data.id);\n\t\t\t\tlocalStorage.setItem('cities', JSON.stringify(cities));\n\t\t\t\talert('Succes!');\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t\talert(e);\n\t\t\t});\n\t}\n\n\tfunction saveViaId(e) {\n\t\te.preventDefault();\n\t\tif (cityId === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst url = `https://api.openweathermap.org/data/2.5/weather?id=${cityId}&appid=${key}`;\n\t\tfetch(url)\n\t\t\t.then(function (resp) {\n\t\t\t\treturn resp.json();\n\t\t\t})\n\t\t\t.then(function (data) {\n\t\t\t\tif (data.id == null) {\n\t\t\t\t\tthrow new Error(\"invalid data\");\n\t\t\t\t}\n\t\t\t\tif (cities.includes(data.id)) {\n\t\t\t\t\talert('You have already added this city');\n\t\t\t\t\tthrow new Error(\"already added\");\n\t\t\t\t}\n\t\t\t\tcities.push(data.id);\n\t\t\t\tlocalStorage.setItem('cities', JSON.stringify(cities));\n\t\t\t\talert('Succes!');\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t\talert(e);\n\t\t\t});\n\t}\n\n\treturn (\n\t\t<div className=\"mainPage\">\n\t\t\t<div className={headerStyles.container}>\n\t\t\t\t<Link to=\"/\" className={`back-button ${headerStyles.button}`}>\n\t\t\t\t\t<img src={backButton} alt=\"Back button\" />\n\t\t\t\t</Link>\n\t\t\t\t<div className={headerStyles.info}>\n\t\t\t\t\t<div className={headerStyles.name}>Add city</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={`save-button ${headerStyles.button}`}>\n\t\t\t\t\t<img src={optionsButton} alt=\"Done button\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={addCityStyles.container}>\n\t\t\t\t<form className={addCityStyles.form} onSubmit={saveViaName}>\n\t\t\t\t\t<div className={addCityStyles.title}>Via city's name</div>\n\t\t\t\t\t<div className={addCityStyles.input}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvalue={cityName}\n\t\t\t\t\t\t\tonChange={(e) => setCityName(e.target.value)}\n\t\t\t\t\t\t\tlabel=\"City\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tonClick={saveViaName}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd\n\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t\t<form className={addCityStyles.form} onSubmit={saveViaPosition}>\n\t\t\t\t\t<div className={addCityStyles.title}>Via longitude and latitude</div>\n\t\t\t\t\t<div className={addCityStyles.input}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvalue={long}\n\t\t\t\t\t\t\tonChange={(e) => setLong(e.target.value)}\n\t\t\t\t\t\t\tlabel=\"Longitude\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={addCityStyles.input}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvalue={lat}\n\t\t\t\t\t\t\tonChange={(e) => setLat(e.target.value)}\n\t\t\t\t\t\t\tlabel=\"Latitude\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tonClick={saveViaPosition}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd\n\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t\t<form className={addCityStyles.form} onSubmit={saveViaId}>\n\t\t\t\t\t<div className={addCityStyles.title}>Via city's id</div>\n\t\t\t\t\t<div className={addCityStyles.input}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvalue={cityId}\n\t\t\t\t\t\t\tonChange={(e) => setCityId(e.target.value)}\n\t\t\t\t\t\t\tlabel=\"Id\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tonClick={saveViaId}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd\n\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n"],"sourceRoot":""}